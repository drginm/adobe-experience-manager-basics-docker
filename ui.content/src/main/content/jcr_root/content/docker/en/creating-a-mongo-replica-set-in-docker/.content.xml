<?xml version="1.0" encoding="UTF-8"?>
<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0" xmlns:cq="http://www.day.com/jcr/cq/1.0" xmlns:jcr="http://www.jcp.org/jcr/1.0" xmlns:nt="http://www.jcp.org/jcr/nt/1.0"
    jcr:primaryType="cq:Page">
    <jcr:content
        cq:lastModified="{Date}2018-04-29T15:13:35.776-05:00"
        cq:lastModifiedBy="admin"
        cq:template="/apps/docker/templates/article-content"
        jcr:primaryType="cq:PageContent"
        jcr:title="Creating a mongo replica set in Docker"
        sling:resourceType="docker/components/structure/page">
        <logo
            jcr:primaryType="nt:unstructured"
            sling:resourceType="docker/components/structure/logo"/>
        <title
            jcr:primaryType="nt:unstructured"
            sling:resourceType="docker/components/content/title"/>
        <topnav
            jcr:primaryType="nt:unstructured"
            sling:resourceType="docker/components/structure/topnav"/>
        <par
            jcr:primaryType="nt:unstructured"
            sling:resourceType="wcm/foundation/components/parsys">
            <video
                jcr:created="{Date}2018-04-29T11:35:09.657-05:00"
                jcr:createdBy="admin"
                jcr:lastModified="{Date}2018-04-29T15:12:49.910-05:00"
                jcr:lastModifiedBy="admin"
                jcr:primaryType="nt:unstructured"
                sling:resourceType="docker/components/content/video"
                key="mlw7vWISaF4"/>
            <text
                jcr:lastModified="{Date}2018-04-29T15:13:18.829-05:00"
                jcr:lastModifiedBy="admin"
                jcr:primaryType="nt:unstructured"
                sling:resourceType="docker/components/content/text"
                text="&lt;p>This is a Docker tutorial for creating a Mongo replica set using docker compose and also a couple more containers to experiment with the replica set, above is the vid and below you will find some of the steps followed.&lt;br>&#xa;&lt;/p>&#xa;"
                textIsRich="true"/>
            <text_226285490
                jcr:created="{Date}2018-04-29T11:39:27.203-05:00"
                jcr:createdBy="admin"
                jcr:lastModified="{Date}2018-04-29T15:13:35.774-05:00"
                jcr:lastModifiedBy="admin"
                jcr:primaryType="nt:unstructured"
                sling:resourceType="docker/components/content/text"
                text="&lt;h3>Steps&lt;/h3>&#xa;&lt;ul>&#xa;&lt;li>Pre-reqs&lt;ul>&#xa;&lt;li>Have &lt;a href=&quot;https://nodejs.org/en/&quot;>node.js &lt;/a>installed&lt;/li>&#xa;&lt;li>And &lt;a href=&quot;https://www.docker.com/&quot;>docker&lt;/a> installed (make sure you have docker-compose as well)&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Create a container for defining configurations for a mongo instance&lt;/li>&#xa;&lt;li>Create a container for setting up the replica set&lt;/li>&#xa;&lt;li>Create a simple node app using expressjs and mongoose (A modified version from the &lt;a href=&quot;http://www.dlighthouse.co/2017/09/docker-node-express-mongo.html&quot;>previous video&lt;/a>)&lt;/li>&#xa;&lt;li>Create a docker-compose file with the mongo and setup containers and two additional containers for experimenting with the replica set&lt;/li>&#xa;&lt;li>Build, Run and experiment with your new containers&lt;/li>&#xa;&lt;/ul>&#xa;&lt;h4>Create a dockerfile for the first mongo container (not really needed but you could configure more stuff if here)&lt;/h4>&#xa;&lt;ul>&#xa;&lt;li>Include container with mongo preinstalled:&amp;nbsp;&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>FROM mongo&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Create default/working directory:&amp;nbsp;&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>WORKDIR /usr/src/configs&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Copy mongo's configurations file into the container&lt;i>&lt;b>&lt;br>&#xa;&lt;/b>&lt;/i>&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>COPY mongo.conf .&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Expose the default port for a mongo container&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>EXPOSE 27017&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Initialize the container using the config file&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>CMD [&amp;quot;--config&amp;quot;, &amp;quot;./mongo.conf&amp;quot;]&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;/ul>&#xa;&lt;h4>Create a dockerfile for setting up the replica set&lt;/h4>&#xa;&lt;ul>&#xa;&lt;li>Include a container with mongo preinstalled so we can easily use the mongo shell:&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>FROM mongo&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Create default/working directory:&amp;nbsp;&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>WORKDIR /usr/src/configs&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Copy the scripts needed for configuring the replica set: &lt;i>&lt;b>&amp;nbsp;&lt;/b>&lt;/i>&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>COPY replicaSet.js .&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;li>&lt;i>&lt;b>COPY setup.sh .&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Execute the setup shell script&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>CMD [&amp;quot;./setup.sh&amp;quot;]&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;/ul>&#xa;&lt;h4>Create a docker-compose.yml file&lt;/h4>&#xa;&lt;ul>&#xa;&lt;li>Version for the docker-compose file:&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>version: '3'&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>The list of services and their respective configurations:&amp;nbsp;&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>services:&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>&lt;b>Our first mongo container: mongo-rs0-1 &lt;/b>&lt;i>&lt;b>&lt;br>&#xa;&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;ul>&#xa;&lt;li>&lt;b>Our database services: &lt;i>mongo-rs0-2&lt;/i>&lt;/b>&lt;i>&lt;b> and mongo-rs0-3&lt;/b>&lt;/i>&lt;ul>&#xa;&lt;li>The only difference here is that we are using the default mongo image and given that I specify the command to be executed&lt;i>&lt;b>&lt;br>&#xa;&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>&lt;b>Our setup service: &lt;i>setup-rs&lt;/i>&lt;/b>&lt;i>&lt;b>&lt;br>&#xa;&lt;/b>&lt;/i>&lt;ul>&#xa;&lt;li>The name of each service:&lt;i>&lt;b>&lt;br>&#xa;&lt;/b>&lt;/i>&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>setup-rs&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>The name of the image that we want to reuse from &lt;a href=&quot;https://hub.docker.com/_/mongo/&quot;>dockerhub&lt;/a>&lt;ul>&#xa;&lt;li>&lt;b>&lt;i>image: setup-rs&lt;/i>&lt;/b>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>The folder in which the dockerfile is located&lt;ul>&#xa;&lt;li>&lt;b>&lt;i>build: ./setup&lt;/i>&lt;/b>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;b>&lt;i>&lt;/i>&lt;/b>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>&lt;b>An optional but useful service for browsing our database: adminmongo&lt;/b>&lt;ul>&#xa;&lt;li>The name of each service:&lt;i>&lt;b>&lt;br>&#xa;&lt;/b>&lt;/i>&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&amp;nbsp;adminmongo&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>&lt;i>&lt;b>&amp;nbsp;&lt;/b>&lt;/i>The name of the image that we want to reuse from &lt;a href=&quot;https://hub.docker.com/r/mrvautin/adminmongo/&quot;>dockerhub&lt;/a>&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>image: &amp;quot;mrvautin/adminmongo&amp;quot;&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>The ports to expose for this particular container&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>ports:&lt;br>&#xa;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - &amp;quot;1234:1234&amp;quot;&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>&amp;nbsp;&lt;ul>&#xa;&lt;li>The name of each service, they can also work as a way to identify each service and connect to them within a container (for example you could connect to the mongo database using the name of the service: mongodb://&lt;i>&lt;b>&lt;u>mongo-rs0-1&lt;/u>&lt;/b>&lt;/i>/test):&lt;i>&lt;b>&lt;br>&#xa;&lt;/b>&lt;/i>&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>mongo-rs0-1&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>The name of the image that we want to build&lt;ul>&#xa;&lt;li>&lt;b>&lt;i>image: mongo-start&lt;/i>&lt;/b>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>The folder in which the dockerfile is located (if you have everything in the same folder then just adding &amp;quot;build: ./&amp;quot; would suffice)&lt;ul>&#xa;&lt;li>&lt;b>&lt;i>build: ./mongo-rs0-1&lt;/i>&lt;/b>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>The ports to expose and to which ports on the host machine to map them (&lt;i>&lt;b>host-port&lt;/b>&lt;/i>:&lt;i>&lt;b>container-port&lt;/b>&lt;/i>)&lt;ul>&#xa;&lt;li>&lt;b>&lt;i>ports:&lt;br>&#xa;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - &amp;quot;27017:27017&amp;quot;&lt;/i>&lt;/b>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Which folders from the host machine should be shared to the container.&lt;ul>&#xa;&lt;li>&lt;b>&lt;i>volumes:&lt;br>&#xa;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - ./mongo-rs0-1/data:/data/db&lt;/i>&lt;/b>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Declare that we require this container to be up and running before the current one does&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>depends_on:&lt;br>&#xa;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - &amp;quot;mongo-rs0-2&amp;quot; &lt;/b>&lt;/i>&lt;b>and &lt;/b>&lt;i>&lt;b>- &amp;quot;mongo-rs0-3&amp;quot;&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;/ul>&#xa;&lt;h4>Build &amp;amp;amp; Run&lt;/h4>&#xa;&lt;ul>&#xa;&lt;li>Build the container:&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>docker-compose build&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Run the container (will also build any necessary container)&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&lt;i>&lt;b>docker-compose up&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>If you don't know the ip for your newly created node+express app use the ip used by the docker machine&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&lt;i>&lt;b>docker-machine ip&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Open the web app in your browser&lt;i>&lt;b>&lt;i>&lt;b> &lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&lt;i>&lt;b>&lt;i>&lt;b>&lt;i>&lt;b>http://THE-IP&lt;/b>&lt;/i>&lt;/b>&lt;/i>:3000/testFind&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Adminmongo&amp;nbsp; UI&lt;br>&#xa;&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&lt;i>&lt;b>http://&lt;i>&lt;b>&lt;i>&lt;b>&lt;i>&lt;b>&lt;i>&lt;b>THE-IP&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/b>&lt;/i>:1234/&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Start different specific services on your docker-compose file just add the name to each service&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&lt;i>&lt;b>docker-compose up mongo-rs0-1 adminmongo&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;li>&lt;b>&lt;i>&lt;b>docker-compose up service-name-1 service-name-2 ...&lt;/b>&lt;/i>&lt;/b>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>See a list of the currently running containers in your machine&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&lt;i>&lt;b>docker ps&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Query for the replica set status&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&lt;i>&lt;b>docker exec mongodbreplicaset_mongo-rs0-1_1 bash -c 'mongo --eval &amp;quot;rs.status();&amp;quot;' &lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;li>Stop a specific running container&lt;ul>&#xa;&lt;li>&lt;i>&lt;b>&lt;i>&lt;b>docker stop mongodbreplicaset_mongo-rs0-1_1&lt;/b>&lt;/i>&lt;/b>&lt;/i>&lt;/li>&#xa;&lt;/ul>&#xa;&lt;/li>&#xa;&lt;/ul>&#xa;&lt;h4>Resources&lt;/h4>&#xa;&lt;p>&lt;a href=&quot;https://github.com/drginm/docker-boilerplates/tree/master/mongodb-replicaset&quot;>Github link for the code&lt;/a>&lt;/p>&#xa;&lt;p>&lt;a href=&quot;https://docs.mongodb.com/manual/replication/&quot;>Mongo Replication - Replica Set&lt;/a>&lt;/p>&#xa;&lt;p>&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/deploy-replica-set-for-testing/&quot;>Deploy a Replica Set for Testing and Development&lt;/a>&lt;/p>&#xa;&lt;p>&lt;a href=&quot;https://hub.docker.com/_/mongo/&quot;>Mongo - Docker Hub&lt;/a>&lt;/p>&#xa;&lt;p>&lt;a href=&quot;https://docs.mongodb.com/manual/reference/configuration-options/#replication-options&quot;>Replication Options - Configuration File Options&lt;/a>&lt;/p>&#xa;&lt;p>&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/write-scripts-for-the-mongo-shell/&quot;>Write Scripts for the mongo Shell&lt;/a>&lt;/p>&#xa;"
                textIsRich="true"/>
        </par>
    </jcr:content>
</jcr:root>
